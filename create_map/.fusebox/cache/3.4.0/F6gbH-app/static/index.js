module.exports = { contents: "var test_str = \"550\\n\" +\n    \"0 528 528\\n\" +\n    \"1 278 528\\n\" +\n    \"2 185 179\\n\" +\n    \"3 544 182\\n\" +\n    \"4 704 392\\n\" +\n    \"5 953 242\\n\" +\n    \"##end \\n\" +\n    \"6 1106 645\\n\" +\n    \"7 673 773\\n\" +\n    \"8 287 795\\n\" +\n    \"9 86 571\\n\" +\n    \"10 371 400\\n\" +\n    \"##start \\n\" +\n    \"11 424 183\\n\" +\n    \"2-10\\n\" +\n    \"11-10\\n\" +\n    \"11-2\\n\" +\n    \"1-2\\n\" +\n    \"9-1\\n\" +\n    \"9-8\\n\" +\n    \"7-8\\n\" +\n    \"7-0\\n\" +\n    \"6-0\\n\" +\n    \"6-5\\n\" +\n    \"6-4\\n\" +\n    \"6-3\\n\" +\n    \"0-3\\n\" +\n    \"0-4\\n\" +\n    \"5-4\\n\" +\n    \"5-3\\n\" +\n    \"11-3\\n\" +\n    \"11-8\\n\" +\n    \"0-8\\n\" +\n    \"0-2\\n\" +\n    \"10-5\\n\" +\n    \"4-7\\n\";\nvar name;\nvar tab_place = 0;\nvar start = true;\nvar end = true;\nvar tab_link = [];\nvar room_1;\nvar room_2;\nvar CANVAS;\nvar data = {};\n/*------------------------------------*\\\n    get les datas\n\\*------------------------------------*/\nvar get_data = function () {\n    var count_start = 0;\n    var count_end = 0;\n    data.tab_room = [];\n    data.tab_connection = [];\n    var tab_data = test_str.split(\"\\n\");\n    var i = 1;\n    // console.log(tab_data)\n    data.nb_f = parseInt(tab_data[0]);\n    while (tab_data[i].split(\" \").length === 3 || tab_data[i][0] === \"#\") {\n        var room = void 0;\n        room = tab_data[i];\n        if (tab_data[i] === \"##start \") {\n            count_start = 1;\n            i++;\n            continue;\n        }\n        if (tab_data[i] === \"##end \") {\n            count_end = 1;\n            i++;\n            continue;\n        }\n        if (count_start) {\n            room = room + \" s\";\n            count_start = false;\n        }\n        if (count_end) {\n            room = room + \" e\";\n            count_end = false;\n        }\n        data.tab_room.push(room);\n        ++i;\n    }\n    while (tab_data[i].split(\"-\").length === 2 && tab_data[i][0] !== \"F\") {\n        data.tab_connection.push(tab_data[i]);\n        i++;\n    }\n};\n/*------------------------------------*\\\n    read le file\n\\*------------------------------------*/\nvar set_input = function () {\n    document.getElementById(\"file\").onchange = function () {\n        var file = this.files[0];\n        var reader = new FileReader();\n        reader.onload = function () {\n            // Entire file\n            get_data(this.result);\n        };\n        reader.readAsText(file);\n    };\n};\n/*------------------------------------*\\\n    Ux and glob letiable\n\\*------------------------------------*/\nvar print_room = false;\nvar liaison = false;\nvar manage_UX = function () {\n    // validate\n    $(\"#validate\").click(function (e) {\n        print_all_that_shit();\n    });\n    // print_room_visu\n    $(\"#btn__room\").click(function () {\n        if (liaison === true)\n            $(\"#btn_liaison\").trigger(\"click\");\n        print_room = !print_room;\n        print_room ? $(\"#btn__room\").text(\"faire des rooms\") : $(\"#btn__room\").text(\"pas faire des rooms\");\n        print_room ? $(\"#btn__room\").css(\"background\", \"green\") : $(\"#btn__room\").css(\"background\", \"grey\");\n    });\n    // liaison\n    $(\"#btn_liaison\").click(function (e) {\n        if (print_room === true)\n            $(\"#btn__room\").trigger(\"click\");\n        liaison = !liaison;\n        liaison ? $(\"#btn_liaison\").text(\"faire des liaison\") : $(\"#btn_liaison\").text(\"pas faire des liaison\");\n        liaison ? $(\"#btn_liaison\").css(\"background\", \"red\") : $(\"#btn_liaison\").css(\"background\", \"grey\");\n    });\n    // start\n    $(\"#btn_start\").click(function (e) {\n        if (print_room === true)\n            $(\"#btn__room\").trigger(\"click\");\n        if (liaison === true)\n            $(\"#btn_liaison\").trigger(\"click\");\n        if (start != -1)\n            start = true;\n        $(\"#btn_start\").text(\"start done\");\n    });\n    // end\n    $(\"#btn_end\").click(function (e) {\n        if (print_room === true)\n            $(\"#btn__room\").trigger(\"click\");\n        if (liaison === true)\n            $(\"#btn_liaison\").trigger(\"click\");\n        if (end != -1)\n            end = true;\n        $(\"#btn_end\").text(\"end done\");\n    });\n};\nvar make_start = function (rect) {\n    start = false;\n    rect.start = true;\n    rect.set({\n        fill: \"red\"\n    });\n};\nvar make_end = function (rect) {\n    end = true;\n    rect.end = true;\n    rect.set({\n        fill: \"blue\"\n    });\n};\n/*------------------------------------*\\\n    biuld and draw room\n\\*------------------------------------*/\nvar print_room_visu = function (element) {\n    var tab = element.split(\" \");\n    var x = parseInt(tab[1]);\n    var y = parseInt(tab[2]);\n    var rect = new fabric.Rect({\n        left: x,\n        top: y,\n        width: 50,\n        height: 50,\n        stroke: \"green\",\n        fill: \"white\",\n        strokeWidth: 5,\n        lockMovementX: true,\n        lockMovementY: true,\n        hasControls: false\n    });\n    CANVAS.add(rect);\n    // le name de la room\n    name = parseInt(tab[0]);\n    rect.my = parseInt(name);\n    var text = new fabric.Text(\"\" + name, {\n        left: x, top: y, selectable: false\n    });\n    if (tab.length == 4) {\n        if (tab[3] == 's')\n            make_start(rect);\n        if (tab[3] == 'e')\n            make_end(rect);\n    }\n    CANVAS.add(text);\n};\n/*------------------------------------*\\\n    biuld and draw ine\n\\*------------------------------------*/\nvar draw_line_visu = function () {\n    // console.log(room_1, room_2)\n    var LINE = new fabric.Line([\n        room_1.getCenterPoint().x,\n        room_1.getCenterPoint().y,\n        room_2.getCenterPoint().x,\n        room_2.getCenterPoint().y\n    ], {\n        stroke: \"red\",\n        strokeWidth: 0.9,\n        selectable: false\n    });\n    CANVAS.add(LINE);\n};\nvar draw_map = function () {\n    data.tab_room.map(function (element) {\n        print_room_visu(element, CANVAS);\n    });\n    // let all_el = CANVAS.getObjects().map((el) => {\n    //     console.log(el.my)\n    // })\n    //\n    data.tab_connection.map(function (element) {\n        var tab_line = element.split(\"-\");\n        var all_el = CANVAS.getObjects();\n        room_1 = all_el.find(function (el) {\n            return el.my === parseInt(tab_line[0]);\n        });\n        room_2 = all_el.find(function (el) {\n            return el.my === parseInt(tab_line[1]);\n        });\n        // console.log(room_1, room_2)\n        console.log(tab_line[0], tab_line[1]);\n        draw_line_visu(CANVAS);\n    });\n};\nwindow.onload = function () {\n    set_input();\n    get_data();\n    CANVAS = new fabric.StaticCanvas(\"mon_CANVAS\");\n    setTimeout(draw_map(), 1000);\n};\n",
dependencies: [],
sourceMap: {},
headerContent: undefined,
mtime: 1533721461000,
devLibsRequired : undefined,
ac : undefined,
_ : {}
}
